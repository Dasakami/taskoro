from django.core.management.base import BaseCommand
from users.models import CharacterClass
from tasks.models import BaseTask

class Command(BaseCommand):
    help = 'Creates default character classes and base tasks'

    def handle(self, *args, **kwargs):
        # Create character classes
        warrior, created = CharacterClass.objects.get_or_create(
            name="–í–æ–∏–Ω",
            defaults={
                "description": "–§–∏–∑–∏—á–µ—Å–∫–∏–µ –∑–∞–¥–∞—á–∏ –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏",
                "icon": "‚öîÔ∏è",
                "color": "#ff3366"
            }
        )
        if created:
            self.stdout.write(self.style.SUCCESS(f'Created character class: {warrior.name}'))
        
        sage, created = CharacterClass.objects.get_or_create(
            name="–ú—É–¥—Ä–µ—Ü",
            defaults={
                "description": "–ó–∞–¥–∞—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–±—É—á–µ–Ω–∏–µ–º –∏ –∑–Ω–∞–Ω–∏—è–º–∏",
                "icon": "üìö",
                "color": "#3366ff"
            }
        )
        if created:
            self.stdout.write(self.style.SUCCESS(f'Created character class: {sage.name}'))
        
        strategist, created = CharacterClass.objects.get_or_create(
            name="–°—Ç—Ä–∞—Ç–µ–≥",
            defaults={
                "description": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è, –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
                "icon": "üß†",
                "color": "#33ff99"
            }
        )
        if created:
            self.stdout.write(self.style.SUCCESS(f'Created character class: {strategist.name}'))
        
        merchant, created = CharacterClass.objects.get_or_create(
            name="–ö—É–ø–µ—Ü",
            defaults={
                "description": "–§–∏–Ω–∞–Ω—Å—ã –∏ –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ",
                "icon": "üí∞",
                "color": "#ffcc33"
            }
        )
        if created:
            self.stdout.write(self.style.SUCCESS(f'Created character class: {merchant.name}'))
        
        socialist, created = CharacterClass.objects.get_or_create(
            name="–°–æ—Ü–∏–∞–ª–∏—Å—Ç",
            defaults={
                "description": "–û–±—â–µ–Ω–∏–µ, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–≤—è–∑–∏ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞",
                "icon": "üë•",
                "color": "#ff66cc"
            }
        )
        if created:
            self.stdout.write(self.style.SUCCESS(f'Created character class: {socialist.name}'))
        
        creator, created = CharacterClass.objects.get_or_create(
            name="–¢–≤–æ—Ä–µ—Ü",
            defaults={
                "description": "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å–∞–º–æ–≤—ã—Ä–∞–∂–µ–Ω–∏–µ, —Ö–æ–±–±–∏",
                "icon": "üé®",
                "color": "#9966ff"
            }
        )
        if created:
            self.stdout.write(self.style.SUCCESS(f'Created character class: {creator.name}'))
        
        # Create base tasks
        
        # Warrior tasks
        warrior_tasks = [
            {
                "title": "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ —Å–∏–ª—ã",
                "description": "–í—ã–ø–æ–ª–Ω–∏—Ç—å —Å–∏–ª–æ–≤—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É (–æ—Ç–∂–∏–º–∞–Ω–∏—è, –ø—Ä–∏—Å–µ–¥–∞–Ω–∏—è, –ø–æ–¥—Ç—è–≥–∏–≤–∞–Ω–∏—è)",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 45,
                "xp_reward": 40
            },
            {
                "title": "–ü—Ä–æ–±–µ–∂–∫–∞",
                "description": "–ü—Ä–æ–±–µ–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 3 –∫–º",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 30,
                "xp_reward": 30
            },
            {
                "title": "–†–∞—Å—Ç—è–∂–∫–∞",
                "description": "–í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–ø–ª–µ–∫—Å —Ä–∞—Å—Ç—è–∂–∫–∏ —É—Ç—Ä–æ–º –∏–ª–∏ –≤–µ—á–µ—Ä–æ–º",
                "difficulty": "easy",
                "task_type": "habit",
                "estimated_minutes": 15,
                "xp_reward": 20
            },
            {
                "title": "10,000 —à–∞–≥–æ–≤",
                "description": "–ü—Ä–æ–π—Ç–∏ –º–∏–Ω–∏–º—É–º 10,000 —à–∞–≥–æ–≤ –∑–∞ –¥–µ–Ω—å",
                "difficulty": "medium",
                "task_type": "daily",
                "estimated_minutes": 90,
                "xp_reward": 35
            },
            {
                "title": "–≠–ø–∏—á–µ—Å–∫–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞",
                "description": "–í—ã–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª–µ –ø–æ –≤—Å–µ–º –≥—Ä—É–ø–ø–∞–º –º—ã—à—Ü",
                "difficulty": "hard",
                "task_type": "one_time",
                "estimated_minutes": 90,
                "xp_reward": 80
            }
        ]
        
        # Sage tasks
        sage_tasks = [
            {
                "title": "–ß—Ç–µ–Ω–∏–µ –∫–Ω–∏–≥–∏",
                "description": "–ü—Ä–æ—á–∏—Ç–∞—Ç—å –º–∏–Ω–∏–º—É–º 30 —Å—Ç—Ä–∞–Ω–∏—Ü –∫–Ω–∏–≥–∏ –ø–æ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—é –∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–µ",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 45,
                "xp_reward": 40
            },
            {
                "title": "–ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞",
                "description": "–ü–æ—Ç—Ä–∞—Ç–∏—Ç—å 20 –º–∏–Ω—É—Ç –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 20,
                "xp_reward": 30
            },
            {
                "title": "–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –ø–æ–¥–∫–∞—Å—Ç",
                "description": "–ü—Ä–æ—Å–ª—É—à–∞—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –ø–æ–¥–∫–∞—Å—Ç",
                "difficulty": "easy",
                "task_type": "one_time",
                "estimated_minutes": 30,
                "xp_reward": 25
            },
            {
                "title": "–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á",
                "description": "–†–µ—à–∏—Ç—å –º–∏–Ω–∏–º—É–º 3 –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–ª–∏ –≥–æ–ª–æ–≤–æ–ª–æ–º–∫–∏",
                "difficulty": "medium",
                "task_type": "daily",
                "estimated_minutes": 30,
                "xp_reward": 35
            },
            {
                "title": "–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å",
                "description": "–ü—Ä–æ–π—Ç–∏ –æ–¥–∏–Ω —É—Ä–æ–∫ –æ–Ω–ª–∞–π–Ω-–∫—É—Ä—Å–∞ –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–π —Ç–µ–º–µ",
                "difficulty": "hard",
                "task_type": "habit",
                "estimated_minutes": 60,
                "xp_reward": 50
            }
        ]
        
        # Strategist tasks
        strategist_tasks = [
            {
                "title": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è",
                "description": "–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –Ω–∞ –¥–µ–Ω—å —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ä–∞–º–∫–∞–º–∏",
                "difficulty": "easy",
                "task_type": "habit",
                "estimated_minutes": 15,
                "xp_reward": 25
            },
            {
                "title": "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –æ–±–∑–æ—Ä",
                "description": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—à–µ–¥—à—É—é –Ω–µ–¥–µ–ª—é –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 45,
                "xp_reward": 50
            },
            {
                "title": "–¢–µ—Ö–Ω–∏–∫–∞ –ü–æ–º–æ–¥–æ—Ä–æ",
                "description": "–ü–æ—Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ 25 –º–∏–Ω—É—Ç —Ä–∞–±–æ—Ç—ã, 5 –º–∏–Ω—É—Ç –æ—Ç–¥—ã—Ö–∞ (–º–∏–Ω–∏–º—É–º 4 —Ü–∏–∫–ª–∞)",
                "difficulty": "medium",
                "task_type": "daily",
                "estimated_minutes": 120,
                "xp_reward": 40
            },
            {
                "title": "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–≥–æ –º–µ—Å—Ç–∞",
                "description": "–ù–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ –∏ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã",
                "difficulty": "medium",
                "task_type": "one_time",
                "estimated_minutes": 45,
                "xp_reward": 35
            },
            {
                "title": "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
                "description": "–°–æ—Å—Ç–∞–≤–∏—Ç—å –ø–ª–∞–Ω –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤–∞–∂–Ω–æ–π —Ü–µ–ª–∏ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 3 –º–µ—Å—è—Ü–∞",
                "difficulty": "hard",
                "task_type": "one_time",
                "estimated_minutes": 90,
                "xp_reward": 75
            }
        ]
        
        # Merchant tasks
        merchant_tasks = [
            {
                "title": "–£—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤",
                "description": "–ó–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ —Ä–∞—Å—Ö–æ–¥—ã –∑–∞ –¥–µ–Ω—å –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏—Ö",
                "difficulty": "easy",
                "task_type": "habit",
                "estimated_minutes": 10,
                "xp_reward": 20
            },
            {
                "title": "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ–±–∑–æ—Ä",
                "description": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å—ã –∑–∞ –º–µ—Å—è—Ü –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±—é–¥–∂–µ—Ç –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 60,
                "xp_reward": 45
            },
            {
                "title": "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π",
                "description": "–ò–∑—É—á–∏—Ç—å –æ–¥–Ω—É –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—É—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å",
                "difficulty": "medium",
                "task_type": "one_time",
                "estimated_minutes": 45,
                "xp_reward": 40
            },
            {
                "title": "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫",
                "description": "–ü–æ—Ç—Ä–∞—Ç–∏—Ç—å —á–∞—Å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞",
                "difficulty": "hard",
                "task_type": "habit",
                "estimated_minutes": 60,
                "xp_reward": 50
            },
            {
                "title": "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤",
                "description": "–ù–∞–π—Ç–∏ —Å–ø–æ—Å–æ–± —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–∞—Ö",
                "difficulty": "medium",
                "task_type": "one_time",
                "estimated_minutes": 30,
                "xp_reward": 35
            }
        ]
        
        # Socialist tasks
        socialist_tasks = [
            {
                "title": "–°–≤—è–∑—å —Å –±–ª–∏–∑–∫–∏–º–∏",
                "description": "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–ø–∏—Å–∞—Ç—å —Ä–æ–¥—Å—Ç–≤–µ–Ω–Ω–∏–∫—É –∏–ª–∏ –¥—Ä—É–≥—É, —Å –∫–æ—Ç–æ—Ä—ã–º –¥–∞–≤–Ω–æ –Ω–µ –æ–±—â–∞–ª–∏—Å—å",
                "difficulty": "easy",
                "task_type": "habit",
                "estimated_minutes": 15,
                "xp_reward": 20
            },
            {
                "title": "–ù–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥",
                "description": "–ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–æ–≤—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º –∏–ª–∏ —É–∫—Ä–µ–ø–∏—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç",
                "difficulty": "medium",
                "task_type": "one_time",
                "estimated_minutes": 30,
                "xp_reward": 35
            },
            {
                "title": "–ì—Ä—É–ø–ø–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ",
                "description": "–ü–æ—Å–µ—Ç–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ, –≥–¥–µ –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤",
                "difficulty": "hard",
                "task_type": "one_time",
                "estimated_minutes": 120,
                "xp_reward": 60
            },
            {
                "title": "–ü–æ–º–æ—â—å –¥—Ä—É–≥–∏–º",
                "description": "–°–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞",
                "difficulty": "easy",
                "task_type": "daily",
                "estimated_minutes": 20,
                "xp_reward": 25
            },
            {
                "title": "–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–ª—É—à–∞–Ω–∏–µ",
                "description": "–ü—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–ª—É—à–∞–Ω–∏–µ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ –±–µ–∑ –ø–µ—Ä–µ–±–∏–≤–∞–Ω–∏—è",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 30,
                "xp_reward": 30
            }
        ]
        
        # Creator tasks
        creator_tasks = [
            {
                "title": "–¢–≤–æ—Ä—á–µ—Å–∫–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞",
                "description": "–£–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º—è —Å–≤–æ–µ–º—É —Ö–æ–±–±–∏ –∏–ª–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–º—É –ø—Ä–æ–µ–∫—Ç—É",
                "difficulty": "medium",
                "task_type": "habit",
                "estimated_minutes": 45,
                "xp_reward": 40
            },
            {
                "title": "–ù–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞",
                "description": "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–∏–∫—É –∏–ª–∏ –ø–æ–¥—Ö–æ–¥ –≤ —Å–≤–æ–µ–º —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ",
                "difficulty": "medium",
                "task_type": "one_time",
                "estimated_minutes": 60,
                "xp_reward": 50
            },
            {
                "title": "–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞",
                "description": "–î–æ–≤–µ—Å—Ç–∏ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è",
                "difficulty": "hard",
                "task_type": "one_time",
                "estimated_minutes": 120,
                "xp_reward": 80
            },
            {
                "title": "–¢–≤–æ—Ä—á–µ—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫",
                "description": "–ó–∞–ø–∏—Å–∞—Ç—å –∏–¥–µ–∏ –∏ –º—ã—Å–ª–∏ –≤ —Ç–≤–æ—Ä—á–µ—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫",
                "difficulty": "easy",
                "task_type": "habit",
                "estimated_minutes": 15,
                "xp_reward": 20
            },
            {
                "title": "–ò–∑—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç –º–∞—Å—Ç–µ—Ä–∞",
                "description": "–ò–∑—É—á–∏—Ç—å —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–∑–Ω–∞–Ω–Ω–æ–≥–æ –º–∞—Å—Ç–µ—Ä–∞ –≤ –≤–∞—à–µ–π —Ç–≤–æ—Ä—á–µ—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏",
                "difficulty": "medium",
                "task_type": "daily",
                "estimated_minutes": 30,
                "xp_reward": 35
            }
        ]
        
        # Create all tasks
        for task_data in warrior_tasks:
            BaseTask.objects.get_or_create(
                title=task_data["title"],
                character_class=warrior,
                defaults={
                    "description": task_data["description"],
                    "difficulty": task_data["difficulty"],
                    "task_type": task_data["task_type"],
                    "estimated_minutes": task_data["estimated_minutes"],
                    "xp_reward": task_data["xp_reward"]
                }
            )
        
        for task_data in sage_tasks:
            BaseTask.objects.get_or_create(
                title=task_data["title"],
                character_class=sage,
                defaults={
                    "description": task_data["description"],
                    "difficulty": task_data["difficulty"],
                    "task_type": task_data["task_type"],
                    "estimated_minutes": task_data["estimated_minutes"],
                    "xp_reward": task_data["xp_reward"]
                }
            )
        
        for task_data in strategist_tasks:
            BaseTask.objects.get_or_create(
                title=task_data["title"],
                character_class=strategist,
                defaults={
                    "description": task_data["description"],
                    "difficulty": task_data["difficulty"],
                    "task_type": task_data["task_type"],
                    "estimated_minutes": task_data["estimated_minutes"],
                    "xp_reward": task_data["xp_reward"]
                }
            )
        
        for task_data in merchant_tasks:
            BaseTask.objects.get_or_create(
                title=task_data["title"],
                character_class=merchant,
                defaults={
                    "description": task_data["description"],
                    "difficulty": task_data["difficulty"],
                    "task_type": task_data["task_type"],
                    "estimated_minutes": task_data["estimated_minutes"],
                    "xp_reward": task_data["xp_reward"]
                }
            )
        
        for task_data in socialist_tasks:
            BaseTask.objects.get_or_create(
                title=task_data["title"],
                character_class=socialist,
                defaults={
                    "description": task_data["description"],
                    "difficulty": task_data["difficulty"],
                    "task_type": task_data["task_type"],
                    "estimated_minutes": task_data["estimated_minutes"],
                    "xp_reward": task_data["xp_reward"]
                }
            )
        
        for task_data in creator_tasks:
            BaseTask.objects.get_or_create(
                title=task_data["title"],
                character_class=creator,
                defaults={
                    "description": task_data["description"],
                    "difficulty": task_data["difficulty"],
                    "task_type": task_data["task_type"],
                    "estimated_minutes": task_data["estimated_minutes"],
                    "xp_reward": task_data["xp_reward"]
                }
            )
        
        self.stdout.write(self.style.SUCCESS('Successfully created all base tasks!'))